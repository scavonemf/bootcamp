{"ast":null,"code":"var _jsxFileName = \"/Users/mflir/Documents/Learning/bootcamp/src/components/counter.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = props => {\n  _s();\n\n  const initialValue = 0;\n  const [counter, setCounter] = useState(initialValue);\n\n  const handleClick = () => {\n    setCounter(counter + 1);\n  };\n\n  const handleReset = () => {\n    setCounter(initialValue);\n  };\n\n  const isEven = counter % 2 === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The initial value of the counter is :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"OUDZisOf4bRp3EyDf0/tuuKtANY=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/mflir/Documents/Learning/bootcamp/src/components/counter.js"],"names":["useState","Counter","props","initialValue","counter","setCounter","handleClick","handleReset","isEven"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAMC,YAAY,GAAG,CAArB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACG,YAAD,CAAtC;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBF,IAAAA,UAAU,CAACF,YAAD,CAAV;AACD,GAFD;;AAIA,QAAMK,MAAM,GAAGJ,OAAO,GAAG,CAAV,KAAgB,CAA/B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA1BD;;GAAMN,O;;KAAAA,O;AA4BN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst Counter = (props) => {\n\n  const initialValue = 0\n\n  const [counter, setCounter] = useState(initialValue)\n\n  const handleClick = () => {\n    setCounter(counter + 1)\n  }\n\n  const handleReset = () => {\n    setCounter(initialValue)\n  }\n\n  const isEven = counter % 2 === 0\n\n  return (\n    <div>\n      <p>\n        The initial value of the counter is :\n      </p>\n      <h1>{counter}</h1>\n      <button onClick={handleClick}>increment</button>\n      <button onClick={handleReset}>reset</button>\n    </div>\n  );\n}\n\nexport default Counter"]},"metadata":{},"sourceType":"module"}