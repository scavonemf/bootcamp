{"ast":null,"code":"var _jsxFileName = \"/Users/mflir/Documents/Learning/bootcamp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Note } from './components/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const noteToAddToState = {\n      id: notes.length + 1,\n      title: newNote,\n      body: newNote,\n      important: Math.random() < 0.5\n    }; // setNotes(notes.concat(noteToAddToState))\n\n    setNotes([...notes, noteToAddToState]);\n    setNewNote('');\n  }; // if (!notes) {\n  //   return 'not notes'\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        content: note.content,\n        date: note.date\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"b7p8I5+6TAlfCfUr4HdBt64BaEA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mflir/Documents/Learning/bootcamp/src/App.js"],"names":["useState","Note","App","notes","setNotes","newNote","setNewNote","handleChange","event","target","value","handleSubmit","preventDefault","noteToAddToState","id","length","title","body","important","Math","random","map","note","content","date"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAE9BA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,gBAAgB,GAAG;AACvBC,MAAAA,EAAE,EAAEX,KAAK,CAACY,MAAN,GAAe,CADI;AAEvBC,MAAAA,KAAK,EAAEX,OAFgB;AAGvBY,MAAAA,IAAI,EAAEZ,OAHiB;AAIvBa,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAJJ,KAAzB,CAJ8B,CAW9B;;AACAhB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWU,gBAAX,CAAD,CAAR;AACAP,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAdD,CAVgB,CA0BhB;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBACGH,KAAK,CACHkB,GADF,CACMC,IAAI,iBACP,QAAC,IAAD;AAAoB,QAAA,OAAO,EAAEA,IAAI,CAACC,OAAlC;AAA2C,QAAA,IAAI,EAAED,IAAI,CAACE;AAAtD,SAAWF,IAAI,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEN,OAAd;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEE;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/CD;;GAAML,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport { Note } from './components/note'\n\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([])\n\n  const [newNote, setNewNote] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault()\n\n    const noteToAddToState = {\n      id: notes.length + 1,\n      title: newNote,\n      body: newNote,\n      important: Math.random() < 0.5\n    }\n\n    // setNotes(notes.concat(noteToAddToState))\n    setNotes([...notes, noteToAddToState])\n    setNewNote('')\n  }\n\n  // if (!notes) {\n  //   return 'not notes'\n  // }\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n\n      <ol>\n        {notes\n          .map(note =>\n            <Note key={note.id} content={note.content} date={note.date} />\n          )}\n      </ol>\n\n      <form onSubmit={handleSubmit}>\n        <input value={newNote} type=\"text\" onChange={handleChange} />\n        <button>Create note</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}