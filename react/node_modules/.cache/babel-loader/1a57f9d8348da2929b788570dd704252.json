{"ast":null,"code":"var _jsxFileName = \"/Users/mflir/Documents/Learning/bootcamp/src/components/form.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid'; //for unique id \n\nimport { createNote } from '../service/serviceNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  notes,\n  setNotes\n}) => {\n  _s();\n\n  const [newNote, setNewNote] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const noteToAddToState = {\n      title: newNote,\n      body: newNote,\n      userId: notes.leght + 1\n    };\n    setNotes(notes.concat(noteToAddToState)); //for faster render\n\n    setError('');\n    createNote(noteToAddToState).then(newNote => setNotes([...notes, newNote])).catch(error => {\n      console.error(error);\n      setError('The note could not be created');\n    });\n    setNewNote('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"+t5FkZ4VveYhnOP93a2PhE9yXxo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mflir/Documents/Learning/bootcamp/src/components/form.js"],"names":["Fragment","useState","v4","uuidv4","createNote","Form","notes","setNotes","newNote","setNewNote","error","setError","handleChange","event","target","value","handleSubmit","preventDefault","noteToAddToState","title","body","userId","leght","concat","then","catch","console","color"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CAAqC;;AACrC,SAASC,UAAT,QAA2B,yBAA3B;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAE9BA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,gBAAgB,GAAG;AACvBC,MAAAA,KAAK,EAAEX,OADgB;AAEvBY,MAAAA,IAAI,EAAEZ,OAFiB;AAGvBa,MAAAA,MAAM,EAAEf,KAAK,CAACgB,KAAN,GAAc;AAHC,KAAzB;AAMAf,IAAAA,QAAQ,CAACD,KAAK,CAACiB,MAAN,CAAaL,gBAAb,CAAD,CAAR,CAV8B,CAUW;;AAEzCP,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAP,IAAAA,UAAU,CAACc,gBAAD,CAAV,CACGM,IADH,CACQhB,OAAO,IACXD,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAFZ,EAIGiB,KAJH,CAISf,KAAK,IAAI;AACdgB,MAAAA,OAAO,CAAChB,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAAC,+BAAD,CAAR;AACD,KAPH;AASAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAvBD;;AAyBA,sBACE,QAAC,QAAD;AAAA,eACGC,KAAK,iBAAI;AAAM,MAAA,KAAK,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,gBAAgCjB;AAAhC;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAER,OAAd;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3CD;;GAAMP,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import { Fragment, useState } from \"react\"\n\nimport { v4 as uuidv4 } from 'uuid'; //for unique id \nimport { createNote } from '../service/serviceNotes'\n\n\nconst Form = ({ notes, setNotes }) => {\n  const [newNote, setNewNote] = useState('')\n\n  const [error, setError] = useState('')\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault()\n\n    const noteToAddToState = {\n      title: newNote,\n      body: newNote,\n      userId: notes.leght + 1\n    }\n\n    setNotes(notes.concat(noteToAddToState)) //for faster render\n\n    setError('')\n    createNote(noteToAddToState)\n      .then(newNote =>\n        setNotes([...notes, newNote])\n      )\n      .catch(error => {\n        console.error(error)\n        setError('The note could not be created')\n      })\n\n    setNewNote('')\n  }\n\n  return (\n    <Fragment>\n      {error && <span style={{ color: 'red' }}>{error}</span>}\n      <form onSubmit={handleSubmit}>\n        <input value={newNote} type=\"text\" onChange={handleChange} />\n        <button>Create note</button>\n      </form>\n    </Fragment>\n  )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}