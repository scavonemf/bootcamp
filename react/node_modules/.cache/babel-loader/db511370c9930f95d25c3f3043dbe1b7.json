{"ast":null,"code":"var _jsxFileName = \"/Users/mflir/Documents/Learning/bootcamp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Note } from './components/note';\nimport { getAllNotes, createNote } from './service/serviceNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    getAllNotes().then(response => {\n      setNotes(response);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const noteToAddToState = {\n      title: newNote,\n      body: newNote,\n      userId: 1\n    };\n    setNotes(notes.concat(noteToAddToState)); //for faster render\n\n    setError('');\n    createNote(noteToAddToState).then(newNote => setNotes([...notes, newNote])).catch(error => {\n      console.error(error);\n      setError('ERRORRRRR!!!');\n    });\n    setNewNote('');\n  };\n\n  if (!notes) {\n    return 'not notes';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading ? 'Cargando...' : null, /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, { ...note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ahaRGwR2sk/Mf8fhmx+BHzqeQ68=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mflir/Documents/Learning/bootcamp/src/App.js"],"names":["useEffect","useState","Note","getAllNotes","createNote","App","notes","setNotes","newNote","setNewNote","loading","setLoading","error","setError","then","response","handleChange","event","target","value","handleSubmit","preventDefault","noteToAddToState","title","body","userId","concat","catch","console","map","note","id","color"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,IAAAA,WAAW,GACRW,IADH,CACQC,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJH;AAKD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9BR,IAAAA,UAAU,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAE9BA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,gBAAgB,GAAG;AACvBC,MAAAA,KAAK,EAAEf,OADgB;AAEvBgB,MAAAA,IAAI,EAAEhB,OAFiB;AAGvBiB,MAAAA,MAAM,EAAE;AAHe,KAAzB;AAMAlB,IAAAA,QAAQ,CAACD,KAAK,CAACoB,MAAN,CAAaJ,gBAAb,CAAD,CAAR,CAV8B,CAUW;;AAEzCT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAT,IAAAA,UAAU,CAACkB,gBAAD,CAAV,CACGR,IADH,CACQN,OAAO,IACXD,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAFZ,EAIGmB,KAJH,CAISf,KAAK,IAAI;AACdgB,MAAAA,OAAO,CAAChB,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACD,KAPH;AASAJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAvBD;;AA2BA,MAAI,CAACH,KAAL,EAAY;AACV,WAAO,WAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,OAAO,GAAG,aAAH,GAAmB,IAF7B,eAGE;AAAA,gBACGJ,KAAK,CACHuB,GADF,CACMC,IAAI,iBACP,QAAC,IAAD,OAAwBA;AAAxB,SAAWA,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,EAUGnB,KAAK,iBAAI;AAAM,MAAA,KAAK,EAAE;AAAEoB,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,gBAAgCpB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAVZ,eAYE;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEZ,OAAd;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEQ;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAxED;;GAAMX,G;;KAAAA,G;AA0EN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { Note } from './components/note'\nimport { getAllNotes, createNote } from './service/serviceNotes'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState('')\n\n\n  useEffect(() => {\n    setLoading(true)\n    getAllNotes()\n      .then(response => {\n        setNotes(response)\n        setLoading(false)\n      })\n  }, [])\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault()\n\n    const noteToAddToState = {\n      title: newNote,\n      body: newNote,\n      userId: 1\n    }\n\n    setNotes(notes.concat(noteToAddToState)) //for faster render\n\n    setError('')\n    createNote(noteToAddToState)\n      .then(newNote =>\n        setNotes([...notes, newNote])\n      )\n      .catch(error => {\n        console.error(error)\n        setError('ERRORRRRR!!!')\n      })\n\n    setNewNote('')\n  }\n\n\n\n  if (!notes) {\n    return 'not notes'\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      {loading ? 'Cargando...' : null}\n      <ol>\n        {notes\n          .map(note =>\n            <Note key={note.id} {...note} />\n          )}\n      </ol>\n      \n      {error && <span style={{ color: 'red' }}>{error}</span>}\n\n      <form onSubmit={handleSubmit}>\n        <input value={newNote} type=\"text\" onChange={handleChange} />\n        <button>Create note</button>\n      </form>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}