{"ast":null,"code":"var _jsxFileName = \"/Users/mflir/Documents/Learning/bootcamp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Note } from './components/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      setNotes(json);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const noteToAddToState = {\n      id: notes.length + 1,\n      title: newNote,\n      body: newNote,\n      important: Math.random() < 0.5\n    }; // setNotes(notes.concat(noteToAddToState))\n\n    setNotes([...notes, noteToAddToState]);\n    setNewNote('');\n  };\n\n  if (!notes) {\n    return 'not notes';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, { ...note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Create note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7d63h4D9Z9E2lz7Z7iuTh8qNBKM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mflir/Documents/Learning/bootcamp/src/App.js"],"names":["useEffect","useState","Note","App","notes","setNotes","newNote","setNewNote","setLoading","fetch","then","response","json","handleChange","event","target","value","handleSubmit","preventDefault","noteToAddToState","id","length","title","body","important","Math","random","map","note"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAU;AACdP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACD,KAJH;AAKD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BP,IAAAA,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAE9BA,IAAAA,KAAK,CAACI,cAAN;AAEA,UAAMC,gBAAgB,GAAG;AACvBC,MAAAA,EAAE,EAAEhB,KAAK,CAACiB,MAAN,GAAe,CADI;AAEvBC,MAAAA,KAAK,EAAEhB,OAFgB;AAGvBiB,MAAAA,IAAI,EAAEjB,OAHiB;AAIvBkB,MAAAA,SAAS,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAJJ,KAAzB,CAJ8B,CAW9B;;AACArB,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,gBAAX,CAAD,CAAR;AACAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAdD;;AAgBA,MAAI,CAACH,KAAL,EAAY;AACV,WAAO,WAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBACGA,KAAK,CACHuB,GADF,CACMC,IAAI,iBACP,QAAC,IAAD,OAAwBA;AAAxB,SAAWA,IAAI,CAACR,EAAhB;AAAA;AAAA;AAAA;AAAA,cAFH;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAEX,OAAd;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,QAAQ,EAAEO;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAvDD;;GAAMV,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Note } from './components/note'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n\n\n  useEffect(() => {\n    setLoading(true)\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => response.json())\n      .then((json) => {\n        setNotes(json)\n      })\n  }, [])\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault()\n\n    const noteToAddToState = {\n      id: notes.length + 1,\n      title: newNote,\n      body: newNote,\n      important: Math.random() < 0.5\n    }\n\n    // setNotes(notes.concat(noteToAddToState))\n    setNotes([...notes, noteToAddToState])\n    setNewNote('')\n  }\n\n  if (!notes) {\n    return 'not notes'\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n\n      <ol>\n        {notes\n          .map(note =>\n            <Note key={note.id} {...note} />\n          )}\n      </ol>\n\n      <form onSubmit={handleSubmit}>\n        <input value={newNote} type=\"text\" onChange={handleChange} />\n        <button>Create note</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}